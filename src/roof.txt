
hs_roofline.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <kernel_roofline(double*, double, double)>:
   0:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
   5:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
   9:	c4 e2 7d 19 d0       	vbroadcastsd ymm2,xmm0
   e:	c4 e2 7d 19 c9       	vbroadcastsd ymm1,xmm1
  13:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
  17:	55                   	push   rbp
  18:	48 89 e5             	mov    rbp,rsp
  1b:	41 52                	push   r10
  1d:	53                   	push   rbx
  1e:	48 89 fb             	mov    rbx,rdi
  21:	48 83 ec 60          	sub    rsp,0x60
  25:	c5 fd 29 55 90       	vmovapd YMMWORD PTR [rbp-0x70],ymm2
  2a:	c5 fd 29 4d b0       	vmovapd YMMWORD PTR [rbp-0x50],ymm1
  2f:	c5 f8 77             	vzeroupper 
  32:	e8 00 00 00 00       	call   37 <kernel_roofline(double*, double, double)+0x37>	33: R_X86_64_PC32	get_time()-0x4
  37:	48 8d 8b 00 00 00 20 	lea    rcx,[rbx+0x20000000]
  3e:	c5 fb 11 45 e8       	vmovsd QWORD PTR [rbp-0x18],xmm0
  43:	48 89 da             	mov    rdx,rbx
  46:	c5 fd 28 55 90       	vmovapd ymm2,YMMWORD PTR [rbp-0x70]
  4b:	c5 fd 28 4d b0       	vmovapd ymm1,YMMWORD PTR [rbp-0x50]
  50:	c5 7d 28 0a          	vmovapd ymm9,YMMWORD PTR [rdx]
  54:	b8 00 01 00 00       	mov    eax,0x100
  59:	c5 7d 28 42 20       	vmovapd ymm8,YMMWORD PTR [rdx+0x20]
  5e:	c5 fd 28 7a 40       	vmovapd ymm7,YMMWORD PTR [rdx+0x40]
  63:	c5 fd 28 72 60       	vmovapd ymm6,YMMWORD PTR [rdx+0x60]
  68:	c5 fd 28 aa 80 00 00 00 	vmovapd ymm5,YMMWORD PTR [rdx+0x80]
  70:	c5 fd 28 a2 a0 00 00 00 	vmovapd ymm4,YMMWORD PTR [rdx+0xa0]
  78:	c5 fd 28 9a c0 00 00 00 	vmovapd ymm3,YMMWORD PTR [rdx+0xc0]
  80:	c5 fd 28 82 e0 00 00 00 	vmovapd ymm0,YMMWORD PTR [rdx+0xe0]
  88:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  90:	48 83 e8 01          	sub    rax,0x1
  94:	c4 62 f5 98 ca       	vfmadd132pd ymm9,ymm1,ymm2
  99:	c4 62 f5 98 c2       	vfmadd132pd ymm8,ymm1,ymm2
  9e:	c4 e2 f5 98 fa       	vfmadd132pd ymm7,ymm1,ymm2
  a3:	c4 e2 f5 98 f2       	vfmadd132pd ymm6,ymm1,ymm2
  a8:	c4 e2 f5 98 ea       	vfmadd132pd ymm5,ymm1,ymm2
  ad:	c4 e2 f5 98 e2       	vfmadd132pd ymm4,ymm1,ymm2
  b2:	c4 e2 f5 98 da       	vfmadd132pd ymm3,ymm1,ymm2
  b7:	c4 e2 f5 98 c2       	vfmadd132pd ymm0,ymm1,ymm2
  bc:	75 d2                	jne    90 <kernel_roofline(double*, double, double)+0x90>
  be:	c5 7d 29 0a          	vmovapd YMMWORD PTR [rdx],ymm9
  c2:	48 81 c2 00 01 00 00 	add    rdx,0x100
  c9:	c5 7d 29 82 20 ff ff ff 	vmovapd YMMWORD PTR [rdx-0xe0],ymm8
  d1:	c5 fd 29 ba 40 ff ff ff 	vmovapd YMMWORD PTR [rdx-0xc0],ymm7
  d9:	c5 fd 29 b2 60 ff ff ff 	vmovapd YMMWORD PTR [rdx-0xa0],ymm6
  e1:	c5 fd 29 6a 80       	vmovapd YMMWORD PTR [rdx-0x80],ymm5
  e6:	c5 fd 29 62 a0       	vmovapd YMMWORD PTR [rdx-0x60],ymm4
  eb:	c5 fd 29 5a c0       	vmovapd YMMWORD PTR [rdx-0x40],ymm3
  f0:	c5 fd 29 42 e0       	vmovapd YMMWORD PTR [rdx-0x20],ymm0
  f5:	48 39 d1             	cmp    rcx,rdx
  f8:	0f 85 52 ff ff ff    	jne    50 <kernel_roofline(double*, double, double)+0x50>
  fe:	c5 f8 77             	vzeroupper 
 101:	e8 00 00 00 00       	call   106 <kernel_roofline(double*, double, double)+0x106>	102: R_X86_64_PC32	get_time()-0x4
 106:	c5 fb 5c 45 e8       	vsubsd xmm0,xmm0,QWORD PTR [rbp-0x18]
 10b:	48 83 c4 60          	add    rsp,0x60
 10f:	5b                   	pop    rbx
 110:	41 5a                	pop    r10
 112:	5d                   	pop    rbp
 113:	49 8d 62 f8          	lea    rsp,[r10-0x8]
 117:	c3                   	ret    

Disassembly of section .text.startup:

0000000000000000 <main>:
   0:	53                   	push   rbx
   1:	bb 14 00 00 00       	mov    ebx,0x14
   6:	48 83 ec 10          	sub    rsp,0x10
   a:	e8 00 00 00 00       	call   f <main+0xf>	b: R_X86_64_PC32	alloc_a()-0x4
   f:	e8 00 00 00 00       	call   14 <main+0x14>	10: R_X86_64_PC32	init_a()-0x4
  14:	c5 fb 10 2d 00 00 00 00 	vmovsd xmm5,QWORD PTR [rip+0x0]        # 1c <main+0x1c>	18: R_X86_64_PC32	.LC1-0x4
  1c:	c5 fb 11 6c 24 08    	vmovsd QWORD PTR [rsp+0x8],xmm5
  22:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  28:	48 8b 3d 00 00 00 00 	mov    rdi,QWORD PTR [rip+0x0]        # 2f <main+0x2f>	2b: R_X86_64_PC32	a-0x4
  2f:	c5 fb 10 0d 00 00 00 00 	vmovsd xmm1,QWORD PTR [rip+0x0]        # 37 <main+0x37>	33: R_X86_64_PC32	.LC2-0x4
  37:	c5 fb 10 05 00 00 00 00 	vmovsd xmm0,QWORD PTR [rip+0x0]        # 3f <main+0x3f>	3b: R_X86_64_PC32	.LC3-0x4
  3f:	e8 00 00 00 00       	call   44 <main+0x44>	40: R_X86_64_PC32	kernel_roofline(double*, double, double)-0x4
  44:	c5 fb 10 25 00 00 00 00 	vmovsd xmm4,QWORD PTR [rip+0x0]        # 4c <main+0x4c>	48: R_X86_64_PC32	.LC4-0x4
  4c:	c5 fb 5d 54 24 08    	vminsd xmm2,xmm0,QWORD PTR [rsp+0x8]
  52:	be 00 00 00 00       	mov    esi,0x0	53: R_X86_64_32	.rodata.str1.1
  57:	bf 01 00 00 00       	mov    edi,0x1
  5c:	b8 02 00 00 00       	mov    eax,0x2
  61:	c5 db 5e c8          	vdivsd xmm1,xmm4,xmm0
  65:	c5 fb 11 54 24 08    	vmovsd QWORD PTR [rsp+0x8],xmm2
  6b:	c5 fb 10 05 00 00 00 00 	vmovsd xmm0,QWORD PTR [rip+0x0]        # 73 <main+0x73>	6f: R_X86_64_PC32	.LC5-0x4
  73:	c5 f3 59 0d 00 00 00 00 	vmulsd xmm1,xmm1,QWORD PTR [rip+0x0]        # 7b <main+0x7b>	77: R_X86_64_PC32	.LC5-0x4
  7b:	e8 00 00 00 00       	call   80 <main+0x80>	7c: R_X86_64_PC32	__printf_chk-0x4
  80:	48 83 eb 01          	sub    rbx,0x1
  84:	75 a2                	jne    28 <main+0x28>
  86:	c5 fb 10 35 00 00 00 00 	vmovsd xmm6,QWORD PTR [rip+0x0]        # 8e <main+0x8e>	8a: R_X86_64_PC32	.LC4-0x4
  8e:	be 00 00 00 00       	mov    esi,0x0	8f: R_X86_64_32	.rodata.str1.1+0x17
  93:	c5 fb 10 05 00 00 00 00 	vmovsd xmm0,QWORD PTR [rip+0x0]        # 9b <main+0x9b>	97: R_X86_64_PC32	.LC5-0x4
  9b:	bf 01 00 00 00       	mov    edi,0x1
  a0:	c5 cb 5e 4c 24 08    	vdivsd xmm1,xmm6,QWORD PTR [rsp+0x8]
  a6:	b8 02 00 00 00       	mov    eax,0x2
  ab:	c5 f3 59 0d 00 00 00 00 	vmulsd xmm1,xmm1,QWORD PTR [rip+0x0]        # b3 <main+0xb3>	af: R_X86_64_PC32	.LC5-0x4
  b3:	e8 00 00 00 00       	call   b8 <main+0xb8>	b4: R_X86_64_PC32	__printf_chk-0x4
  b8:	e8 00 00 00 00       	call   bd <main+0xbd>	b9: R_X86_64_PC32	free_a()-0x4
  bd:	48 83 c4 10          	add    rsp,0x10
  c1:	31 c0                	xor    eax,eax
  c3:	5b                   	pop    rbx
  c4:	c3                   	ret    
